version: 2.1

############################################################
# Shared Jobs and Configuration
############################################################

executors:
  node-executor:
    docker:
      - image: cimg/node:lts-browsers
    working_directory: ~/app

commands:
  attach-workspace-step:
    steps:
      - attach_workspace:
          at: ~/
  persist-workspace-step:
    steps:
      - persist_to_workspace:
          root: ~/
          paths:
            - app

############################################################
# Workflow
############################################################

workflows:
  version: 2.1
  pipeline:
    jobs:
      - install
      - lint:
          requires:
            - install
      - unit-test:
          requires:
            - install
      - e2e-test:
          requires:
            - install
      - sonar-scanner:
          requires:
            - unit-test
      - build-app:
          context: 'prod-jneal-ecr'
          requires:
            - lint
            - unit-test
            - e2e-test
            - sonar-scanner
          filters:
            branches:
              only: main
      - deploy-prod:
          context: 'prod-jneal-ecs'
          requires:
            - build-app
      - prod-e2e-test:
          requires:
            - deploy-prod

############################################################
# Jobs
############################################################

jobs:

  install:
    executor: node-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - node-dependencies-{{ checksum "package-lock.json" }}
            - node-dependencies-
      - run:
          environment:
            NG_CLI_ANALYTICS: ci
          name: Restore packages
          command: npm install
      - run:
          name: Precompile Angular libraries
          command: npx ngcc
      - save_cache:
          key: node-dependencies-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
            - .cache
      - persist-workspace-step

  lint:
    executor: node-executor
    steps:
      - attach-workspace-step
      - run:
          name: Lint code
          command: npx nx run-many --target=lint

  unit-test:
    executor: node-executor
    steps:
      - attach-workspace-step
      - run:
          name: Run unit tests
          command: npx nx run-many --target=test
      - store_test_results:
          path: ./test-results
      - persist_to_workspace:
          root: ~/
          paths:
            - app/coverage

  e2e-test:
    executor: node-executor
    steps:
      - attach-workspace-step
      - run:
          name: Run BFF
          command: npx nx serve bff
          background: true
      - run:
          name: Run e2e tests
          command: npx nx run-many --target=e2e
      - store_test_results:
          path: ./test-results

  sonar-scanner:
    docker:
      - image: sonarsource/sonar-scanner-cli
    working_directory: ~/app
    steps:
      - attach-workspace-step
      - restore_cache:
          key: sonar-plugins
      - run:
          name: Replace coverage paths
          command: |
            sed -i "s+/home/circleci+/tmp+" coverage/apps/bff/lcov.info
            sed -i "s+/home/circleci+/tmp+" coverage/apps/ui/lcov.info
            sed -i "s+/home/circleci+/tmp+" coverage/libs/shared/dtos/lcov.info
            sed -i "s+/home/circleci+/tmp+" coverage/libs/ui/components/lcov.info
      - run:
          name: Run sonar scanner
          command: |
            sonar-scanner \
              -Dsonar.host.url=https://sonarcloud.io \
              -Dsonar.login=$SONAR_TOKEN \
              -Dsonar.organization=jtneal \
              -Dsonar.projectKey=jtneal_jneal.com \
              -Dsonar.projectName=jneal.com \
              -Dsonar.projectVersion=$CIRCLE_SHA1 \
              -Dsonar.branch.name=$CIRCLE_BRANCH
      - save_cache:
          paths:
            - ~/.sonar/cache
          key: sonar-plugins-{{ epoch }}

  build-app:
    docker:
      - image: 'cimg/python:3.11'
    working_directory: ~/app
    steps:
      - attach-workspace-step
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: 'Set Image Tag'
          command: |
            tag="release-$(echo $CIRCLE_SHA1 | cut -c1-7)"
            docker_image="703263122238.dkr.ecr.us-east-2.amazonaws.com/prod-jneal-repo:$tag"
            echo "export DOCKER_IMAGE=$docker_image" >> $BASH_ENV
      - run:
          name: 'Build Docker Image'
          command: 'docker build -t $DOCKER_IMAGE .'
      - run:
          name: 'Install AWS CLI & Authenticate'
          command: |
            sudo pip install awscli
            aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 703263122238.dkr.ecr.us-east-2.amazonaws.com
      - run:
          name: 'Push Docker Image'
          command: 'docker push $DOCKER_IMAGE'

  deploy-prod:
    docker:
      - image: 'cimg/python:3.11'
    working_directory: ~/app
    steps:
      - run:
          name: 'Set Image Tag'
          command: |
            tag="release-$(echo $CIRCLE_SHA1 | cut -c1-7)"
            docker_image="703263122238.dkr.ecr.us-east-2.amazonaws.com/prod-jneal-repo:$tag"
            echo "export DOCKER_IMAGE=$docker_image" >> $BASH_ENV
      - run:
          name: 'Install AWS CLI'
          command: 'sudo pip install awscli'
      - run:
          name: 'Create Task Definition'
          command: 'aws ecs describe-task-definition --task-definition prod-jneal | jq ".taskDefinition | del(.taskDefinitionArn, .revision, .status, .requiresAttributes, .compatibilities, .registeredAt, .registeredBy) | .containerDefinitions[0].image = env.DOCKER_IMAGE" > task-definition.json'
      - run:
          name: 'Deploy Task'
          command: 'aws ecs register-task-definition --cli-input-json file://task-definition.json'
      - run:
          name: 'Deploy Service'
          command: 'aws ecs update-service --cluster prod-fargate-cluster --service prod-jneal --task-definition prod-jneal'

  prod-e2e-test:
    executor: node-executor
    steps:
      - attach-workspace-step
      - run:
          name: Wait for task deployment
          command: sleep 180
      - run:
          name: Run e2e tests
          command: npm run e2e:ci:prod
      - store_test_results:
          path: ./test-results
